/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- Create invoice using collected data from 
		--   IN1 costing message, 
		--   IN2 order file and 
		--   IN3 packaging message
		SET OutputRoot.XMLNSC.Invoice.CustomerNumber = InputRoot.Collection.IN1.XMLNSC.Costing.CustomerNumber;
		SET OutputRoot.XMLNSC.Invoice.Product = InputRoot.Collection.IN2.XMLNSC.Order.Product;
		SET OutputRoot.XMLNSC.Invoice.NumberOrdered = InputRoot.Collection.IN2.XMLNSC.Order.Quantity;
		-- calculate total price as a sum of
		SET OutputRoot.XMLNSC.Invoice.Price = 
		     -- UnitPrice * Quantity
		     (CAST(InputRoot.Collection.IN1.XMLNSC.Costing.UnitPrice  AS DECIMAL )
		        * CAST(InputRoot.Collection.IN2.XMLNSC.Order.Quantity  AS DECIMAL )) 
		     -- Plus postage
		     + CAST(InputRoot.Collection.IN3.XMLNSC.Packaging.Postage AS DECIMAL ); 
 		SET OutputRoot.XMLNSC.Invoice.Delivery = InputRoot.Collection.IN2.XMLNSC.Order.Delivery;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
