CREATE COMPUTE MODULE WSIB_AuditLogging_SubFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties.CodedCharSetId = COALESCE(InputRoot.Properties.CodedCharSetId, 1208);
		SET OutputRoot.Properties.Encoding = COALESCE(InputRoot.Properties.Encoding, 273);
		
		SET OutputRoot.MQMD.Format = 'MQSTR';
		SET OutputRoot.MQMD.CodedCharSetId = COALESCE(InputRoot.MQMD.CodedCharSetId, COALESCE(InputRoot.Properties.CodedCharSetId, 1208));		
		SET OutputRoot.MQMD.Encoding = COALESCE(InputRoot.MQMD.Encoding, COALESCE(InputRoot.Properties.Encoding, 273));
		
		SET OutputRoot.MQRFH2.usr.(Field)MessageFlowLabel = MessageFlowLabel;
        SET OutputRoot.MQRFH2.usr.(Field)loggerAppender = loggerAppender;
        SET OutputRoot.MQRFH2.usr.(Field)logLevel = logLevel; 
        
        IF Environment.Variables.Log.TransactionLevel IN (1,9) AND Environment.Variable.CNF_VAL = 1 THEN
			CALL createAuditMessage();
		ELSEIF Environment.Variable.CNF_VAL IN ( 2, 3) THEN
			CALL createAuditMessage();
		ELSE 
			RETURN FALSE;
		END IF;
        
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE createAuditMessage() BEGIN
		
		DECLARE currentTimeStamp GMTTIMESTAMP;
		DECLARE convertedTimeStamp GMTTIMESTAMP;
		CALL GMT_EST(currentTimeStamp, convertedTimeStamp );
	
		SET OutputRoot.XMLNSC.AuditHdr.UniqueID = COALESCE(Environment.Variables.AuditData.uniqueID , 'N/A');
		SET OutputRoot.XMLNSC.AuditHdr.AuditTime = CAST(convertedTimeStamp AS CHARACTER FORMAT 'IU') ;
		SET OutputRoot.XMLNSC.AuditHdr.TransactionPoint = COALESCE(Environment.Variables.AuditData.transaction_Level , 'N/A') ;
		SET OutputRoot.XMLNSC.AuditHdr.Source = COALESCE(Environment.Variables.AuditData.PutApplName , 'N/A') ;
		SET OutputRoot.XMLNSC.AuditHdr.BrokerName = BrokerName ;
		SET OutputRoot.XMLNSC.AuditHdr.ComponentName =  MessageFlowLabel;
		SET OutputRoot.XMLNSC.AuditHdr.ServiceName =  ExecutionGroupLabel;
		SET OutputRoot.XMLNSC.AuditHdr.Payload = COALESCE(Environment.Variables.AuditData.wholeMsgChar , 'Failed while creating Audit message');
		SET OutputRoot.XMLNSC.AuditHdr.AuditMessage = COALESCE(Environment.Variables.AuditData.AuditMessage, 'N/A' );
		SET OutputRoot.XMLNSC.AuditHdr.CommProtocol = COALESCE(Environment.Variables.AuditData.comm_protocol , 'N/A');
	
	END;
	
END MODULE;