CREATE COMPUTE MODULE WSIB_ExceptionHandling_SubFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE currentTimeStamp GMTTIMESTAMP;
		DECLARE convertedTimeStamp GMTTIMESTAMP;
		
--		CALL CopyMessageHeaders();
		SET OutputRoot.Properties.CodedCharSetId = COALESCE(InputRoot.Properties.CodedCharSetId, 1208);
		SET OutputRoot.Properties.Encoding = COALESCE(InputRoot.Properties.Encoding, 273);
		
		SET OutputRoot.MQMD.Format = 'MQSTR';
		SET OutputRoot.MQMD.CodedCharSetId = COALESCE(InputRoot.MQMD.CodedCharSetId, COALESCE(InputRoot.Properties.CodedCharSetId, 1208));		
		SET OutputRoot.MQMD.Encoding = COALESCE(InputRoot.MQMD.Encoding, COALESCE(InputRoot.Properties.Encoding, 273));
		
		SET OutputRoot.MQRFH2.usr.(Field)MessageFlowLabel = MessageFlowLabel;
        SET OutputRoot.MQRFH2.usr.(Field)errorLoggerAppender = errorLoggerAppender;
        SET OutputRoot.MQRFH2.usr.(Field)errorLogLevel = errorLogLevel;
        SET OutputRoot.MQRFH2.usr.(Field)emailFlag = EmailFlag;
        SET OutputRoot.MQRFH2.usr.(Field)Error_email_to_id = Error_email_to_id ;
		SET OutputRoot.MQRFH2.usr.(Field)Error_email_cc_id = Error_email_cc_id ;
		SET OutputRoot.MQRFH2.usr.(Field)Error_email_from_id = Error_email_from_id ;
		SET OutputRoot.MQRFH2.usr.(Field)Error_email_subject = Error_email_subject ;
		
		CALL GMT_EST(currentTimeStamp, convertedTimeStamp );

		SET OutputRoot.XMLNSC.ExceptionHdr.Source = Environment.Variables.ExceptionData.PutApplName;
		SET OutputRoot.XMLNSC.ExceptionHdr.ErrorId = Environment.Variables.ExceptionData.ERROR_ID;
		SET OutputRoot.XMLNSC.ExceptionHdr.ErrorCode = Environment.Variables.ExceptionData.ErrorCode ;
		SET OutputRoot.XMLNSC.ExceptionHdr.ErrorDesc = Environment.Variables.ExceptionData.ErrorDesc;
		SET OutputRoot.XMLNSC.ExceptionHdr.BrokerName = BrokerName ;
		SET OutputRoot.XMLNSC.ExceptionHdr.ComponentName = ExecutionGroupLabel ;
		SET OutputRoot.XMLNSC.ExceptionHdr.Severity = Environment.Variables.ExceptionData.SEVERITY ;
		SET OutputRoot.XMLNSC.ExceptionHdr.Category = Environment.Variables.ExceptionData.ErrorCategory ;
		SET OutputRoot.XMLNSC.ExceptionHdr.FlowName = MessageFlowLabel ;
		SET OutputRoot.XMLNSC.ExceptionHdr.ExceptionList = COALESCE(Environment.Variables.ExceptionData.ExceptionList, 'Exception message not captured') ;
		SET OutputRoot.XMLNSC.ExceptionHdr.ExceptionTime =  CAST(convertedTimeStamp AS CHARACTER FORMAT 'IU') ;
		SET OutputRoot.XMLNSC.ExceptionHdr.Payload = COALESCE(Environment.Variables.ExceptionData.wholeMsgChar, 'Unable to capture payload') ;
		SET OutputRoot.XMLNSC.ExceptionHdr.CommProtocol = COALESCE(Environment.Variables.ExceptionData.comm_protocol, 'N/A') ;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;