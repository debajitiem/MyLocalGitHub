/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE MessageFlowLabel, errorLoggerAppender, errorLogLevel, tempChar CHARACTER '' ;
		SET Environment.Variable.EmailFlag = InputRoot.MQRFH2.usr.emailFlag ;
		IF Environment.Variable.EmailFlag = TRUE THEN
			SET OutputRoot.EmailOutputHeader.To = InputRoot.MQRFH2.usr.Error_email_to_id;
			SET OutputRoot.EmailOutputHeader.Cc = InputRoot.MQRFH2.usr.Error_email_cc_id;
			SET OutputRoot.EmailOutputHeader.From = InputRoot.MQRFH2.usr.Error_email_from_id;
			SET OutputRoot.EmailOutputHeader.Subject = InputRoot.MQRFH2.usr.Error_email_subject;
			
			SET MessageFlowLabel = InputRoot.MQRFH2.usr.MessageFlowLabel;
	        SET errorLoggerAppender = InputRoot.MQRFH2.usr.errorLoggerAppender ;
	        SET errorLogLevel = InputRoot.MQRFH2.usr.errorLogLevel;
			
		   	SET tempChar = CAST(ASBITSTREAM(InputRoot.XMLNSC 
	           						CCSID InputRoot.Properties.CodedCharSetId 
	           						ENCODING InputRoot.Properties.Encoding) 
	           						AS CHARACTER 
	           						CCSID InputRoot.Properties.CodedCharSetId 
	           						ENCODING InputRoot.Properties.Encoding);
		   	
			SET OutputLocalEnvironment.Destination.Email.Attachment.Content=tempChar;
			RETURN TRUE;
		ELSE 
			RETURN FALSE;
		END IF;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot.MRM = InputRoot.MRM;
	END;
